# Generated by Django 5.1.4 on 2025-03-06 00:23

import clinic_app.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email адрес')),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('password', models.CharField(max_length=50, verbose_name='Пароль')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Является ли пользователь админом?')),
                ('is_doctor', models.BooleanField(default=False, verbose_name='Является ли пользователь врачом?')),
                ('is_patient', models.BooleanField(default=False, verbose_name='Является ли пользователь пациентом?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', clinic_app.models.NewUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Diagnose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('decription', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Диагнозы',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Medicament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('producer_country', models.CharField(max_length=100)),
                ('purpose', models.TextField()),
                ('contraindications', models.TextField()),
                ('production_date', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'Медикаменты',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.BigIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Процедуры',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Специализации',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'В процессе'), (2, 'Завершено')])),
                ('date_appointment', models.DateTimeField()),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Лечения',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('patronymic', models.CharField(max_length=50)),
                ('image_path', models.TextField()),
                ('rating', models.IntegerField(null=True)),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='clinic_app.specialization')),
            ],
            options={
                'verbose_name_plural': 'Врачи',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('patronymic', models.CharField(max_length=50)),
                ('birth_date', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'Пациенты',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Ожидание подтверждения'), (2, 'Подтверждено'), (3, 'В процессе'), (4, 'Отменено'), (5, 'Перенесено'), (6, 'Завершено')])),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('diagnose', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic_app.diagnose')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_app.procedure')),
                ('treatment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='clinic_app.treatment')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_app.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_app.patient')),
            ],
            options={
                'verbose_name_plural': 'Записи',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.TextField()),
                ('type', models.IntegerField(choices=[(1, '3D модель'), (2, 'Рентген')])),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_app.record')),
            ],
            options={
                'verbose_name_plural': 'Снимки',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.BigIntegerField()),
                ('treatment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clinic_app.treatment')),
            ],
            options={
                'verbose_name_plural': 'Счета',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TreatmentMedicament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_app.medicament')),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_app.treatment')),
            ],
            options={
                'verbose_name_plural': 'Лечения и их медикаменты',
                'managed': True,
                'constraints': [models.UniqueConstraint(fields=('treatment', 'medicament'), name='unique_medicaments_treatment')],
            },
        ),
        migrations.CreateModel(
            name='DoctorsProcedures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_app.procedure')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_app.doctor')),
            ],
            options={
                'verbose_name_plural': 'Врачи и процедуры',
                'managed': True,
                'constraints': [models.UniqueConstraint(fields=('doctor', 'procedure'), name='unique_doctor_procedure')],
            },
        ),
    ]
